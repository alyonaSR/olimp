#include <iostream>
#include <algorithm>

using namespace std;

long long gcd(long long a, long long b){
    if (a < b) swap(a, b);
    if (b == 0) return a;
    return gcd(b, a % b);
}


int main() {
    long long N, A, B;
    cin >> N >> A >> B;

    long long sum = 0;

    sum = (N * (N + 1)) / 2;

    long long end_A = A * (N / A);
    long long end_B = B * (N / B);
    long long AB = (A * B) / gcd(A, B);
    long long ab = N / AB;

    if (end_A > 0) {
        sum -= (A + end_A) * (N / A) / 2;
    }

    if (A != B && end_B > 0) {
        sum -= (B + end_B) * (N / B) / 2;
    }

    if (A != B && AB > 0) {
        sum += (AB*(ab*(ab+1))/2);
    }

    cout << sum;

    return 0;
}
