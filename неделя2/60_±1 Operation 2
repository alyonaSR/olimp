#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

using ll = long long;

int bin(vector<ll>& a, int n, ll x) {
    int l = 0, r = n;
    while (r > l + 1) {
        int mid = (l + r) / 2;
        if (a[mid] > x) {
            r = mid;
        } else l = mid;
    }
    if (a[l] > x) return -1;
    return l;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);

    int n, q;
    cin >> n >> q;
    vector<ll> a;
    vector<ll> pref;
    for (ll i = 0; i < n; i++) {
        ll x;
        cin >> x;
        a.push_back(x);
    }
    sort(a.begin(), a.end());
    pref.push_back(a[0]);
    for (ll i = 1; i < n; i++) {
        pref.push_back(pref[i - 1] + a[i]);
    }
    for (ll i = 0; i < q; i++) {
        ll x;
        cin >> x;
        int index = bin(a, n, x);
        if (index == -1) {
            cout << pref[n - 1] << '\n';
        } else {
            ll ans = x * (index + 1);
            ans -= pref[index];
            ans += pref[n - 1] - pref[index];
            ans -= ((n - (1 + index)) * x);
            cout << ans << '\n';
        }
    }
    return 0;
}
