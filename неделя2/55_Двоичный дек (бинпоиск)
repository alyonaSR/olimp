#include <iostream>
#include <vector>

using namespace std;

using ll = long long;


ll sum(int l, int r, vector<ll> &a){
    if (l == 0) return a[r];
    return a[r] - a[l - 1];
}



int bin(vector <ll> &a, int n, int s) {
    int ans = INT_MAX;
    for(int i = 0; i < n; i++){
        int l = i, r = n - 1, pos = -1;
        ll res = 0;
        while(l <= r){
            int mid = (l + r) / 2;
            
            res = sum(i, mid, a);
            
            if (res <= s){
                pos = mid;
                l = mid + 1;
            }
            else{
                r = mid - 1;
            }
        }
        if (pos == -1 || sum(i, pos, a) != s) continue;
        ans = min(ans, i + (n - pos - 1));
    }
    if (ans == INT_MAX) return -1;
    return ans;
}

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    int t;
    cin >> t;
    for(int i = 0; i < t; i++){
        int n, s;
        cin >> n >> s;
        vector <ll> a, pref;
        for(int j = 0; j < n; j++){
            ll x;
            cin >> x;
            a.push_back(x);
        }
        pref.push_back(a[0]);
        for(int j = 1; j < n; j++){
            pref.push_back(pref[j - 1] + a[j]);
        }
        cout << bin(pref, n, s) << '\n';
    }
    return 0;
}
